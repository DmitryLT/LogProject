# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.telegramBotToken: '%env(TELEGRAM_BOT_TOKEN)%'
    app.telegramChatId: '%env(int:TELEGRAM_CHAT_ID)%'
    jwt_user_seconds_ttl: '%env(int:JWT_USER_SECONDS_TTL)%'
    enable_email_auth_code: '%env(int:ENABLE_EMAIL_AUTH_CODE)%'
    support_email: '%env(SUPPORT_EMAIL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $enableEmailAuthCode: '%enable_email_auth_code%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    Symfony\Component\RateLimiter\RateLimiterFactory:
        class: Symfony\Component\RateLimiter\RateLimiterFactory

    ltdsh\TelegramBotSender\TelegramBotSender:
        class: ltdsh\TelegramBotSender\TelegramBotSender

    Redis: '@snc_redis.default'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\TelegramBotService:
        arguments:
            $telegramBotToken: '%app.telegramBotToken%'
            $telegramChatId: '%app.telegramChatId%'

    App\Service\TokenService:
        arguments:
            $jwtUserSecondsTTL: '%jwt_user_seconds_ttl%'

    App\Service\EmailSendService:
        arguments:
            $supportEmail: '%support_email%'

    App\ParamConverter\RequestConverter:
        class: App\ParamConverter\RequestConverter
        tags:
            - { name: request.param_converter, converter: request_converter, priority: 0 }